syntax = "proto3";

// Specifies the RPC protocol necessary to implement consensus between servers
// based on the Raft algorithm.
package raft_common_proto;

message Server {
  // The hostname which can be used to contact the server.
  string host = 1;

  // The port the server is listening on.
  int32 port = 2;

  // A name used for debugging, printing logs, etc.
  string name = 3;
}

// Configuration for the cluster.
message ClusterConfig {
  // Determines which members are considered part of the cluster.
  repeated Server voters = 1;

  // Holds the next set of members for the cluster.
  repeated Server voters_next = 2;
}

// Identifies an entry in a given log.
message EntryId {
  int64 term = 1;
  int64 index = 2;
}

// Represents an entry in a server's log.
message Entry {
  EntryId id = 1;

  oneof data {
    // An opaque payload which can be applied to the state machine.
    bytes payload = 2;

    // An updated configuration for the cluster. Used to effect membership
    // changes and similar reconfigurations.
    ClusterConfig config = 3;
  }
}


